---

- block:
    - name: ensure mssql credential exists
      uri:
        method: POST
        url: "https://{{ tower_host }}/api/v2/credentials/"
        user: "{{ tower_username }}"
        password: "{{ tower_password }}"
        validate_certs: "{{ tower_verify_ssl|bool }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
          Accept: "application/json"
        body: "{{ body | to_json }}"
        body_format: json
        status_code:
          - 200
          - 201
      register: reg_mssql_credential_response
      vars:
        body:
          name: mssql
          description: Microsoft SQL server credential
          credential_type: "{{ reg_credential_type_mssql.id }}"
          organization: 1
          inputs:
            mssql_username: "{{ mssql_username }}"
            mssql_password: "{{ mssql_password }}"
      when:
        - reg_credential_type_mssql is defined
        - reg_credential_type_mssql.id is defined

    - name: set mssql credential variable
      set_fact:
        reg_mssql_credential: "{{ reg_mssql_credential_response.json }}"

  rescue:
    - name: get credential details
      uri:
        method: GET
        url: "https://{{ tower_host }}/api/v2/credentials/?search=mssql"
        user: "{{ tower_username }}"
        password: "{{ tower_password }}"
        validate_certs: "{{ tower_verify_ssl|bool }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
          Accept: "application/json"
        body_format: json
        status_code:
          - 200
          - 201
      register: reg_mssql_credential_search
      ignore_errors: yes

    - name: set mssql credential variable
      set_fact:
        reg_mssql_credential: "{{ item }}"
      loop: "{{ reg_mssql_credential_search.json.results }}"
      when: ('mssql' == item.name)

- name: create aws windows machine credentials
  tower_credential:
    name: aws-windows-machine
    username: 'Administrator'
    password: "{{ ansible_ssh_password | default(ansible_password) | default(omit) }}"
    kind: ssh
    organization: Default
    state: present
    tower_host: '{{ tower_host }}'
    tower_username: '{{ tower_username }}'
    tower_password: '{{ tower_password }}'
    tower_verify_ssl: '{{ tower_verify_ssl }}'
  register: reg_credential_aws_windows_machine

- name: create aws credentials
  tower_credential:
    name: aws-demo
    username: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') | default(omit) }}"
    password: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') | default(omit) }}"
    kind: aws
    organization: Default
    security_token: "{{ lookup('env', 'AWS_SECURITY_TOKEN') | default(omit) }}"
    state: present
    tower_host: '{{ tower_host }}'
    tower_username: '{{ tower_username }}'
    tower_password: '{{ tower_password }}'
    tower_verify_ssl: '{{ tower_verify_ssl }}'
  register: reg_credential_aws_demo