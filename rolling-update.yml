---

- name: get sql server details
  hosts: '*sql_server'
  pre_tasks:
    - name: set sql server ip
      add_host:
        name: sql_server
        ip_address:  "{{ ansible_private_ip | default(private_ip) | default(ansible_ip_addresses[0]) | default(ansible_host) | default(ansible_ssh_host) }}"

    - debug:
        var: hostvars['sql_server']['ip_address']

- name: rolling update
  hosts: '*iis'
  serial: "50%"
  vars:
    ec2_name_prefix: demo

  pre_tasks:
    - name: set ip address of sql server
      set_fact:
        sql_server_ip_address: "{{ hostvars['sql_server']['ip_address'] }}"
      when:
        - hostvars['sql_server']['ip_address'] is defined

    - name: de-register instance from load balancer
      community.aws.elb_instance:
        region: "{{ ec2_region | default(placement.region) | default('us-east-1') }}"
        instance_id: "{{ ec2_id }}"
        state: absent
      register: deregister_instances
      until: deregister_instances is success
      delay: 3
      retries: 5
      delegate_to: localhost
      become: no
      vars:
        ansible_port: 22
        ansible_connection: local

  roles:
    - music-store-iis

  post_tasks:
    - name: register instance with load balancer
      community.aws.elb_instance:
        region: "{{ ec2_region | default(placement.region) | default('us-east-1') }}"
        ec2_elbs: "{{ deregister_instances.updated_elbs | default(deregister_instances.ansible_facts.ec2_elbs) | default([ec2_name_prefix + '-' + subdomain + '-elb-lb']) }}"
        instance_id: "{{ ec2_id }}"
        state: present
      delegate_to: localhost
      become: no
      vars:
        ansible_port: 22
        ansible_connection: local

